wreckingpila_exploit_tax_info_effect = {
    hidden_effect = {
        if = {
            limit = { always = $IS_TERRITORY_PAR$ }

            wreckingpila_exploit_tax_info_impl_effect = { IS_TERRITORY_PAR = yes CORE_TYPE_PAR = territory }
        }
        else = {
            wreckingpila_exploit_tax_info_impl_effect = { IS_TERRITORY_PAR = no CORE_TYPE_PAR = core }
        }
    }
}

wreckingpila_exploit_tax_effect = {
    hidden_effect = {
        if = {
            limit = { always = $IS_TERRITORY_PAR$ }

            wreckingpila_exploit_tax_impl_effect = { IS_TERRITORY_PAR = yes CORE_TYPE_PAR = territory }
        }
        else = {
            wreckingpila_exploit_tax_impl_effect = { IS_TERRITORY_PAR = no CORE_TYPE_PAR = core }
        }
    }
}

wreckingpila_exploit_tax_info_impl_effect = {
    hidden_effect = {
        set_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            value = 0.00
        }

        set_variable = {
            which = exploit_money_modifier
            value = 0.00
        }

        set_variable = {
            which = province_exploit_money
            value = 0.00
        }

        set_variable = {
            which = province_exploit_money_modifier
            value = 0.00
        }

        every_owned_province = {
            limit = {
                is_territory = $IS_TERRITORY_PAR$
                wrecking_pila_controlled_province_can_exploit = yes
            }

            set_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                value = 0.00
            }

            set_variable = {
                which = exploit_money_modifier
                value = 0.00
            }

            set_variable = {
                which = province_exploit_money
                value = 0.00
            }

            set_variable = {
                which = province_exploit_money_modifier
                value = 0.00
            }    

            # base_tax ducats / year
            export_to_variable = {
                which = province_exploit_money
                value = base_tax
            }

            # local_tax_modifier 100% is 1
            export_to_variable = {
                which = province_exploit_money_modifier
                value = modifier:local_tax_modifier
            }

            export_to_variable = {
                which = province_exploit_money_autonomy
                value = local_autonomy
            }
            
            multiply_variable = {
                which = province_exploit_money
                which = province_exploit_money_modifier
            }

            # income = province_tax - (province_tax*autonomy)/100
            multiply_variable = {
                which = province_exploit_money_autonomy
                which = province_exploit_money
            }

            divide_variable = {
                which = province_exploit_money_autonomy
                value = 100
            }

            subtract_variable = {
                which = province_exploit_money
                which = province_exploit_money_autonomy
            }

            change_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                which = province_exploit_money
            }
            
            owner = {
                change_variable = {
                    which = exploit_money_$CORE_TYPE_PAR$
                    which = PREV
                }
            }
            
            #log = "WRECKING [This.GetName] has [This.province_exploit_money.GetValue] ducats before modifiers"
            #log = "WRECKING [This.GetName] has [This.province_exploit_money_modifier.GetValue] modifier"
            #log = "WRECKING [This.GetName] has [This.province_exploit_money_autonomy.GetValue] autonomy"
        }
        
        # global_tax_modifier 100% is 0
        export_to_variable = {
            which = exploit_money_modifier
            value = modifier:global_tax_modifier
        }
    
        multiply_variable = {
            which = exploit_money_modifier
            which = exploit_money_$CORE_TYPE_PAR$
        }
    
        change_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            which = exploit_money_modifier
        }

        multiply_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            value = 5
        }
    }
}

wreckingpila_exploit_tax_impl_effect = {
    hidden_effect = {
        set_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            value = 0.00
        }

        set_variable = {
            which = exploit_money_modifier
            value = 0.00
        }

        set_variable = {
            which = province_exploit_money
            value = 0.00
        }

        set_variable = {
            which = province_exploit_money_modifier
            value = 0.00
        }

        every_owned_province = {
            limit = {
                is_territory = $IS_TERRITORY_PAR$
                wrecking_pila_controlled_province_can_exploit = yes
            }

            set_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                value = 0.00
            }

            set_variable = {
                which = exploit_money_modifier
                value = 0.00
            }

            set_variable = {
                which = province_exploit_money
                value = 0.00
            }

            set_variable = {
                which = province_exploit_money_modifier
                value = 0.00
            }    

            # base_tax ducats / year
            export_to_variable = {
                which = province_exploit_money
                value = base_tax
            }

            # local_tax_modifier 100% is 1
            export_to_variable = {
                which = province_exploit_money_modifier
                value = modifier:local_tax_modifier
            }

            export_to_variable = {
                which = province_exploit_money_autonomy
                value = local_autonomy
            }
            
            multiply_variable = {
                which = province_exploit_money
                which = province_exploit_money_modifier
            }

            # income = province_tax - (province_tax*autonomy)/100
            multiply_variable = {
                which = province_exploit_money_autonomy
                which = province_exploit_money
            }

            divide_variable = {
                which = province_exploit_money_autonomy
                value = 100
            }

            subtract_variable = {
                which = province_exploit_money
                which = province_exploit_money_autonomy
            }

            change_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                which = province_exploit_money
            }
            
            owner = {
                change_variable = {
                    which = exploit_money_$CORE_TYPE_PAR$
                    which = PREV
                }
            }
            
            #log = "WRECKING [This.GetName] has [This.province_exploit_money.GetValue] ducats before modifiers"
            #log = "WRECKING [This.GetName] has [This.province_exploit_money_modifier.GetValue] modifier"
            #log = "WRECKING [This.GetName] has [This.province_exploit_money_autonomy.GetValue] autonomy"

            add_permanent_province_modifier = {
                name = wreckingpila_exploited
                duration = 7300
            }
    
            add_base_tax = -1
        }
        
        # global_tax_modifier 100% is 0
        export_to_variable = {
            which = exploit_money_modifier
            value = modifier:global_tax_modifier
        }
    
        multiply_variable = {
            which = exploit_money_modifier
            which = exploit_money_$CORE_TYPE_PAR$
        }
    
        change_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            which = exploit_money_modifier
        }

        multiply_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            value = 5
        }

        while = {
            limit = {
                check_variable = {
                    which = exploit_money_$CORE_TYPE_PAR$
                    value = 1
                }
            }

            add_treasury = 1
    
            subtract_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                value = 1
            }
        }
    
        multiply_variable = {
            which = exploit_money_$CORE_TYPE_PAR$
            value = 100
        }
    
        while = {
            limit = {
                check_variable = {
                    which = exploit_money_$CORE_TYPE_PAR$
                    value = 1
                }
            }
    
            add_treasury = 0.01
            
            subtract_variable = {
                which = exploit_money_$CORE_TYPE_PAR$
                value = 1
            }
        }
    }
}